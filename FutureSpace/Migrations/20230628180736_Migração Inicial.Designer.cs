// <auto-generated />
using System;
using FutureSpace.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FutureSpace.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230628180736_Migração Inicial")]
    partial class MigraçãoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FutureSpace.Models.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("Program_LaunchId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Program_LaunchId");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("FutureSpace.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Family")
                        .HasColumnType("longtext");

                    b.Property<string>("Full_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Launch_Library_Id")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Variante")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("FutureSpace.Models.Launch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FailReason")
                        .HasColumnType("longtext");

                    b.Property<string>("Hashtag")
                        .HasColumnType("longtext");

                    b.Property<string>("HoldReason")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Imported_t")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Infographic")
                        .HasColumnType("longtext");

                    b.Property<bool>("Inhold")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LaunchResultId")
                        .HasColumnType("int");

                    b.Property<string>("Launch_Library_Id")
                        .HasColumnType("longtext");

                    b.Property<int?>("Launch_Service_ProviderId")
                        .HasColumnType("int");

                    b.Property<int?>("MissionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Net")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PadId")
                        .HasColumnType("int");

                    b.Property<string>("Probability")
                        .HasColumnType("longtext");

                    b.Property<int?>("RocketId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasColumnType("longtext");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Status_t")
                        .HasColumnType("longtext");

                    b.Property<bool>("TbdDate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TbdTime")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<bool>("Webcast_Live")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Window_End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Window_Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LaunchResultId");

                    b.HasIndex("Launch_Service_ProviderId");

                    b.HasIndex("MissionId");

                    b.HasIndex("PadId");

                    b.HasIndex("RocketId");

                    b.HasIndex("StatusId");

                    b.ToTable("Launchers");
                });

            modelBuilder.Entity("FutureSpace.Models.LaunchResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Next")
                        .HasColumnType("longtext");

                    b.Property<string>("Previous")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LaunchResults");
                });

            modelBuilder.Entity("FutureSpace.Models.LaunchServiceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LaunchServiceProviders");
                });

            modelBuilder.Entity("FutureSpace.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Country_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Map_Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Total_Landing_Count")
                        .HasColumnType("int");

                    b.Property<int>("Total_Launch_Count")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("FutureSpace.Models.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Launch_Designator")
                        .HasColumnType("longtext");

                    b.Property<string>("Launch_Library_Id")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("OrbitId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrbitId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("FutureSpace.Models.Orbit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abbrev")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Orbits");
                });

            modelBuilder.Entity("FutureSpace.Models.Pad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Agency_Id")
                        .HasColumnType("longtext");

                    b.Property<string>("Info_Url")
                        .HasColumnType("longtext");

                    b.Property<string>("Latitude")
                        .HasColumnType("longtext");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Longitude")
                        .HasColumnType("longtext");

                    b.Property<string>("Map_Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Map_Url")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Total_Launch_Count")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<string>("Wiki_Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Pads");
                });

            modelBuilder.Entity("FutureSpace.Models.Program_Launch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image_Url")
                        .HasColumnType("longtext");

                    b.Property<string>("Info_Url")
                        .HasColumnType("longtext");

                    b.Property<string>("LaunchId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<string>("Wiki_Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LaunchId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("FutureSpace.Models.Rocket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ConfigurationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("Rockets");
                });

            modelBuilder.Entity("FutureSpace.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("FutureSpace.Models.Agencia", b =>
                {
                    b.HasOne("FutureSpace.Models.Program_Launch", null)
                        .WithMany("Agencies")
                        .HasForeignKey("Program_LaunchId");
                });

            modelBuilder.Entity("FutureSpace.Models.Launch", b =>
                {
                    b.HasOne("FutureSpace.Models.LaunchResult", null)
                        .WithMany("Results")
                        .HasForeignKey("LaunchResultId");

                    b.HasOne("FutureSpace.Models.LaunchServiceProvider", "Launch_Service_Provider")
                        .WithMany()
                        .HasForeignKey("Launch_Service_ProviderId");

                    b.HasOne("FutureSpace.Models.Mission", "Mission")
                        .WithMany()
                        .HasForeignKey("MissionId");

                    b.HasOne("FutureSpace.Models.Pad", "Pad")
                        .WithMany()
                        .HasForeignKey("PadId");

                    b.HasOne("FutureSpace.Models.Rocket", "Rocket")
                        .WithMany()
                        .HasForeignKey("RocketId");

                    b.HasOne("FutureSpace.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Launch_Service_Provider");

                    b.Navigation("Mission");

                    b.Navigation("Pad");

                    b.Navigation("Rocket");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("FutureSpace.Models.Mission", b =>
                {
                    b.HasOne("FutureSpace.Models.Orbit", "Orbit")
                        .WithMany()
                        .HasForeignKey("OrbitId");

                    b.Navigation("Orbit");
                });

            modelBuilder.Entity("FutureSpace.Models.Pad", b =>
                {
                    b.HasOne("FutureSpace.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FutureSpace.Models.Program_Launch", b =>
                {
                    b.HasOne("FutureSpace.Models.Launch", null)
                        .WithMany("Program")
                        .HasForeignKey("LaunchId");
                });

            modelBuilder.Entity("FutureSpace.Models.Rocket", b =>
                {
                    b.HasOne("FutureSpace.Models.Configuration", "Configuration")
                        .WithMany()
                        .HasForeignKey("ConfigurationId");

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("FutureSpace.Models.Launch", b =>
                {
                    b.Navigation("Program");
                });

            modelBuilder.Entity("FutureSpace.Models.LaunchResult", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("FutureSpace.Models.Program_Launch", b =>
                {
                    b.Navigation("Agencies");
                });
#pragma warning restore 612, 618
        }
    }
}
